<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="guna2CirclePictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        YiPOUuPxP8nRpCMZMhfSAAAAAElFTkSuQmCC
</value>
  </data>
</root>